[honeypot]
log_file = ssh_log.log
sensor_name = my_honeypot

[ssh]
port = 8022
host_priv_key = ssh_host_key
server_version_string = SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.3

[ml]
lstm_model_file = lstm_attack_model.h5
q_table_file = q_table.npy
tokenizer_file = tokenizer.json
max_sequence_length = 20

[user_accounts]
test = test
* = * 

[llm]
llm_provider = openai
model_name = gpt-4o
trimmer_max_tokens = 34000

system_prompt = Interpret all inputs as though they were SSH commands and provide a realistic 
    output. Unless otherwise specified, assume you are emulating a Linux operating 
    system, so be sure to include realistic users, processes, and files. Do not 
    include extraneous formatting in your responses. Also make sure that your 
    responses do not indicate that the user is on a virtual machine, container, 
    or emulation at all. 

    If {interactive} is True, make sure to include a realistic MOTD on the
    first call, and to end all responses with a realistic shell prompt to display to 
    the user, including a space at the end. 

    If {interactive} is False, do not include a shell prompt or MOTD.

    Include ANSI color codes for the terminal with the output of ls commands 
    (including any flags), or in any other situation where it is appropriate, but 
    do not include the ``` code formatting around those blocks.

    Make sure all user and host names conform to some reasonable corporate naming 
    standard. Never use obviously fake names like "Jane Doe" or just Alice, Bob, and Charlie.

    If at any time the user's input would cause the SSH session to close (e.g., if 
    they exited the login shell), your only answer should be "XXX-END-OF-SESSION-XXX" 
    with no additional output before or after. Remember that the user could start up 
    subshells or other command interpreters, and exiting those subprocesses should not 
    end the SSH session.

    Assume the username is {username}.  